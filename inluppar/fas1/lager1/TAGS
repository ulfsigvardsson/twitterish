
item.c,534
struct item 6,41
  char *name;name7,55
  char *descr;descr8,69
  int price;9,84
  list_t *shelves;shelves10,97
struct shelf 13,120
  char *id;id14,135
  int amount;15,147
typedef struct shelf shelf_t;18,165
shelf_t *shelf_new(shelf_new20,196
item_t *item_new(item_new27,334
void edit_description(40,738
void edit_price(45,840
void edit_shelf(50,936
void edit_amount(55,1040
char *item_name(item_name58,1085
char *item_descr(item_descr62,1141
int item_price(66,1199
list_t *item_shelves(item_shelves70,1255

lager.c,217
void print_item(12,187
void list_db_aux(17,324
void list_db(28,564
void db_add_item(34,696
void db_remove_item(43,882
void edit_db(47,929
void undo_last_action(51,959
void event_loop(55,998
int main(114,3136

list.c,604
struct link 8,190
  L elem;9,204
  link_t *next;next10,214
struct list 13,274
  link_t *first;first14,288
  link_t *last;last15,305
list_t *list_new(list_new18,326
void initiate_list(24,467
bool not_empty_list(31,616
void list_append(35,677
void list_prepend(47,918
void print_list(54,1104
int list_length(69,1398
bool pop(80,1599
bool list_remove(95,1915
bool list_insert(118,2374
L *list_get(list_get144,3087
L *list_first(list_first154,3268
L *list_last(list_last158,3330
void list_delete(170,3635
typedef void(*list_action2)list_action2189,4050
void list_apply(196,4320

livekodning.c,600
typedef struct list list_t;7,82
typedef struct link link_t;8,110
typedef struct iter iter_t;9,138
struct iter 11,167
  link_t *current;current12,181
struct list 15,204
  link_t *first;first16,218
  link_t *last;last17,235
struct link 20,255
  char *value;value21,269
  link_t *next;next22,284
int main(34,590
list_t *list_new(list_new49,831
void list_delete(52,895
void list_prepend(62,1071
char *list_get(list_get69,1233
link_t *link_new(link_new78,1428
iter_t list_iterator(88,1616
void iter_delete(94,1722
char *iter_next(iter_next97,1771
bool iter_has_more(107,1970

test.c,42
void test_list_new(5,45
int main(10,132

tree.c,1037
typedef struct node node_t;7,95
struct node 8,123
  K key;9,137
  T *item;item10,146
enum branch 13,161
enum branch {EMPTY,EMPTY13,161
enum branch {EMPTY, EMPTY_LEAF,13,161
enum branch {EMPTY, EMPTY_LEAF, LEAF,13,161
enum branch {EMPTY, EMPTY_LEAF, LEAF, LEFT,13,161
enum branch {EMPTY, EMPTY_LEAF, LEAF, LEFT, RIGHT,13,161
enum branch {EMPTY, EMPTY_LEAF, LEAF, LEFT, RIGHT, FULL}FULL13,161
struct tree 15,220
  node_t *node;node16,234
  tree_t *left;left17,250
  tree_t *right;right18,266
enum branch tree_branches(29,656
node_t *node_new(node_new53,1060
tree_t *tree_new(tree_new58,1151
int tree_size(64,1243
int biggest(89,1683
int tree_depth_aux(93,1738
int tree_depth(125,2338
bool tree_has_key(131,2409
T tree_get(149,3191
bool tree_insert(185,4033
void tree_insert_aux(216,4926
void add_subtree(239,5664
void initiate_tree(252,6103
K *tree_keys(tree_keys268,6538
void tree_keys_aux(278,6757
void tree_elements_aux(290,7001
T *tree_elements(tree_elements308,7480
void tree_apply(333,8313

utils.c,762
  int   i;4,36
  float f;5,47
  char *s;s6,58
  char c;7,69
} answer_t;8,79
typedef bool(*check_func)check_func11,93
typedef answer_t(*convert_func)convert_func12,128
bool is_menu_choice(26,534
char ask_question_menu(36,738
answer_t make_float(46,975
double ask_question_float(50,1051
char *ask_question_shelf(ask_question_shelf55,1210
bool is_valid_shelf(62,1416
bool is_float(78,1782
void clear_input_buffer(98,2213
bool not_empty(112,2585
answer_t ask_question(116,2642
int ask_question_int(135,3076
char *ask_question_string(ask_question_string141,3296
char ask_question_char(147,3474
char chardup(152,3616
bool is_single_char(156,3660
int read_string(160,3721
bool is_number(187,4415
void print(210,4962
void println(218,5080
