
item.c,593
struct item 6,41
  char *name;name7,55
  char *descr;descr8,69
  int price;9,84
  list_t *shelves;shelves10,97
struct shelf 13,120
  char *id;id14,135
  int amount;15,147
typedef struct shelf shelf_t;18,165
shelf_t *shelf_new(shelf_new20,196
item_t *item_new(item_new27,334
void edit_description(40,738
void edit_price(45,866
void edit_shelf(50,986
void edit_amount(55,1109
char *item_name(item_name58,1184
char *item_descr(item_descr62,1240
int item_price(66,1298
list_t *item_shelves(item_shelves70,1354
char *shelf_id(shelf_id74,1418
int shelf_amount(78,1474

lager.c,460
void shelf_is_equal(16,310
void item_has_shelf(24,565
bool shelf_is_used(44,1198
bool is_on_shelf(56,1674
void print_shelf(68,2068
void print_shelves(73,2233
void print_item(79,2387
void list_db_aux(90,2707
void list_db(101,2947
void db_add_item(113,3153
void db_remove_item(138,4230
void check_shelf_ownership(142,4277
void edit_shelves(148,4447
void edit_db(189,5820
void undo_last_action(234,7221
void event_loop(238,7260
int main(261,8088

list.c,529
struct link 8,119
  L elem;9,133
  link_t *next;next10,143
struct list 13,203
  link_t *first;first14,217
  link_t *last;last15,234
list_t *list_new(list_new18,255
void initiate_list(24,396
bool not_empty_list(31,545
void list_append(35,606
void list_prepend(47,847
int list_length(54,1033
bool pop(65,1234
bool list_remove(80,1550
bool list_insert(103,2009
L *list_get(list_get129,2722
L *list_first(list_first139,2903
L *list_last(list_last143,2965
void list_delete(155,3270
void list_apply(176,3803

livekodning.c,600
typedef struct list list_t;7,82
typedef struct link link_t;8,110
typedef struct iter iter_t;9,138
struct iter 11,167
  link_t *current;current12,181
struct list 15,204
  link_t *first;first16,218
  link_t *last;last17,235
struct link 20,255
  char *value;value21,269
  link_t *next;next22,284
int main(34,590
list_t *list_new(list_new49,831
void list_delete(52,895
void list_prepend(62,1071
char *list_get(list_get69,1233
link_t *link_new(link_new78,1428
iter_t list_iterator(88,1616
void iter_delete(94,1722
char *iter_next(iter_next97,1771
bool iter_has_more(107,1970

shelfinfo.c,407
struct shelf_info 3,24
  bool exists;4,44
  enum owner owner;5,59
  char *item_name;item_name6,79
  char *shelf;shelf7,142
shelf_info_t *shelf_info_new(shelf_info_new11,192
char *info_name(info_name17,340
bool info_exists(21,407
char* info_shelf(25,472
enum owner info_owner(29,536
void set_info_exist(33,605
void set_info_owner(37,682
void set_info_name(41,768
void set_info_shelf(45,850

test.c,42
void test_list_new(5,45
int main(10,132

tree.c,1066
typedef struct node node_t;7,95
struct node 8,123
  K key;9,137
  T *item;item10,146
enum branch 13,161
enum branch {EMPTY,EMPTY13,161
enum branch {EMPTY, EMPTY_LEAF,13,161
enum branch {EMPTY, EMPTY_LEAF, LEAF,13,161
enum branch {EMPTY, EMPTY_LEAF, LEAF, LEFT,13,161
enum branch {EMPTY, EMPTY_LEAF, LEAF, LEFT, RIGHT,13,161
enum branch {EMPTY, EMPTY_LEAF, LEAF, LEFT, RIGHT, FULL}FULL13,161
struct tree 15,220
  node_t *node;node16,234
  tree_t *left;left17,250
  tree_t *right;right18,266
enum branch tree_branches(29,656
node_t *node_new(node_new53,1060
tree_t *tree_new(tree_new58,1151
int tree_size(64,1243
int biggest(89,1683
int tree_depth_aux(93,1738
int tree_depth(125,2338
bool matching_keys(129,2407
bool tree_has_key(133,2490
T tree_get(158,3286
bool tree_insert(194,4119
void tree_insert_aux(225,5012
void add_subtree(248,5750
void initiate_tree(261,6189
K *tree_keys(tree_keys277,6624
void tree_keys_aux(287,6843
void tree_elements_aux(299,7087
T *tree_elements(tree_elements317,7566
void tree_apply(342,8399

utils.c,790
  int   i;4,36
  float f;5,47
  char *s;s6,58
  char c;7,69
} answer_t;8,79
typedef bool(*check_func)check_func11,93
typedef answer_t(*convert_func)convert_func12,128
bool is_menu_choice(29,653
char ask_question_menu(39,857
answer_t make_float(49,1103
double ask_question_float(53,1179
char *ask_question_shelf(ask_question_shelf58,1338
bool is_valid_shelf(65,1544
bool is_float(81,1924
void clear_input_buffer(101,2355
bool not_empty(115,2727
answer_t ask_question(121,2786
int ask_question_int(140,3220
char *ask_question_string(ask_question_string146,3440
char ask_question_char(152,3618
char chardup(157,3760
bool is_single_char(161,3804
void print_menu(165,3865
int read_string(169,3920
bool is_number(196,4614
void print(219,5161
void println(227,5279
