
db.c,319
void print_item(34,663
shelf_t make_shelf(45,986
item_t *make_item(make_item51,1166
item_t *input_item(input_item60,1430
void edit_description(69,1772
void edit_price(74,1874
void edit_shelf(79,1970
void edit_amount(84,2074
bool is_menu_choice(90,2164
void print_menu(94,2233
void undo_last_action(98,2288

item.c,291
struct item 6,41
  char *name;name7,55
  char *descr;descr8,69
  int price;9,84
  list_t *shelves;shelves10,97
struct shelf 13,120
  char *id;id14,135
  int amount;15,147
typedef struct shelf shelf_t;18,165
shelf_t *shelf_new(shelf_new20,196
item_t *item_new(item_new27,334

lager.c,41
int main(14,189
void event_loop(37,789

list.c,604
struct link 8,190
  L elem;9,204
  link_t *next;next10,214
struct list 13,274
  link_t *first;first14,288
  link_t *last;last15,305
list_t *list_new(list_new18,326
void initiate_list(24,467
bool not_empty_list(31,616
void list_append(35,677
void list_prepend(47,918
void print_list(54,1104
int list_length(69,1398
bool pop(80,1599
bool list_remove(95,1915
bool list_insert(118,2374
L *list_get(list_get144,3087
L *list_first(list_first154,3268
L *list_last(list_last158,3330
void list_delete(170,3635
typedef void(*list_action2)list_action2189,4050
void list_apply(196,4320

livekodning.c,600
typedef struct list list_t;7,82
typedef struct link link_t;8,110
typedef struct iter iter_t;9,138
struct iter 11,167
  link_t *current;current12,181
struct list 15,204
  link_t *first;first16,218
  link_t *last;last17,235
struct link 20,255
  char *value;value21,269
  link_t *next;next22,284
int main(34,590
list_t *list_new(list_new49,831
void list_delete(52,895
void list_prepend(62,1071
char *list_get(list_get69,1233
link_t *link_new(link_new78,1428
iter_t list_iterator(88,1616
void iter_delete(94,1722
char *iter_next(iter_next97,1771
bool iter_has_more(107,1970

test.c,42
void test_list_new(5,45
int main(10,132

tree.c,1055
typedef struct node node_t;7,95
struct node 8,123
  K key;9,137
  T item;10,146
enum branch 13,160
enum branch {EMPTY,EMPTY13,160
enum branch {EMPTY, EMPTY_LEAF,13,160
enum branch {EMPTY, EMPTY_LEAF, LEAF,13,160
enum branch {EMPTY, EMPTY_LEAF, LEAF, LEFT,13,160
enum branch {EMPTY, EMPTY_LEAF, LEAF, LEFT, RIGHT,13,160
enum branch {EMPTY, EMPTY_LEAF, LEAF, LEFT, RIGHT, FULL}FULL13,160
struct tree 15,219
  node_t *node;node16,233
  tree_t *left;left17,249
  tree_t *right;right18,265
enum branch tree_branches(29,655
node_t *node_new(node_new53,1059
tree_t *tree_new(tree_new58,1150
int tree_size(64,1242
int biggest(89,1682
int tree_depth_aux(93,1737
int tree_depth(125,2337
bool tree_has_key(130,2407
T tree_get(147,3188
bool tree_insert(183,4030
void tree_insert_aux(214,4923
void add_subtree(236,5569
void initiate_tree(249,6008
K *tree_keys(tree_keys265,6443
void tree_keys_aux(275,6662
void tree_elements_aux(287,6906
T *tree_elements(tree_elements305,7385
typedef void(*tree_action2)tree_action2319,7719

utils.c,725
  int   i;4,36
  float f;5,47
  char *s;s6,58
  char c;7,69
} answer_t;8,79
typedef bool(*check_func)check_func11,93
typedef answer_t(*convert_func)convert_func12,128
answer_t make_float(26,542
double ask_question_float(30,618
char *ask_question_shelf(ask_question_shelf35,777
bool is_valid_shelf(42,985
shelf_t to_shelf(59,1389
bool is_float(64,1466
void clear_input_buffer(84,1897
bool not_empty(98,2269
answer_t ask_question(102,2326
int ask_question_int(121,2760
char *ask_question_string(ask_question_string127,2980
char ask_question_char(133,3158
char chardup(138,3300
bool is_single_char(142,3344
int read_string(146,3405
bool is_number(173,4099
void print(196,4646
void println(204,4764
