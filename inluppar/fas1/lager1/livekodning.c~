#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>
#include <assert.h>


typedef struct list list_t;
typedef struct link link_t;

struct list {
  link_t *first;
  link_t *last;
};

struct link {
  char *value;
  link_t *next;
};

list_t *list_new();
void list_delete(list_t *list);
void list_prepend(list_t *list, char *value);
char *list_get(list_t *list, int index);


list_t *list_new() {
  return calloc(1, sizeof(struct list));
}
void list_delete(list_t *list) {
  assert(false);
}
void list_prepend(list_t *list, char *value) {
  list->first = link_new(value, list->first);
  if (list->last == NULL) {
    list->last = list->first;    
  }
}

char *list_get(list_t *list, int index) {
  link_t *cursor = list->first;

  for (int i = 0; cursor && i < index; ++i) {
    cursor = cursor->next;
  }
  return cursor ? cursor->value : NULL;
}
