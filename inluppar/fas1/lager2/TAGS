
analysis.c,15
int main(6,74

file.c,47
int main(5,39
tree_t *load_db(load_db43,868

item.c,986
struct item 7,80
  char *name;name8,94
  char *descr;descr9,108
  int price;10,123
  list_t *shelves;shelves11,136
struct shelf17,203
  char *id;id19,218
  int amount;20,250
shelf_t *shelf_new(shelf_new23,306
shelf_t *shelf_empty(shelf_empty32,457
item_t *item_new(item_new38,540
void item_set_name(54,970
void item_set_description(60,1052
void item_set_price(71,1210
void item_set_shelf(77,1294
void item_set_shelves(82,1377
char *item_name(item_name87,1462
char *item_descr(item_descr92,1518
int item_price(97,1576
list_t *item_shelves(item_shelves102,1632
char *shelf_id(shelf_id108,1722
int shelf_amount(114,1804
void shelf_set_amount(118,1866
void shelf_add_amount(122,1946
int shelf_compare(131,2103
int item_compare(141,2395
void item_free(150,2654
void shelf_free_aux(163,2844
void shelf_free(172,2952
elem_t shelf_copy(178,3063
elem_t item_copy(184,3164
elem_t shelf_deep_copy(190,3215
item_t *item_deep_copy(item_deep_copy202,3474

lager.c,1589
#define MainMenuChoice 10,152
#define AskName 11,235
#define AskDescription 12,286
#define AskPrice 13,351
#define AskShelf 14,400
#define AskAmount 15,457
#define ConfirmAddition 16,519
#define AskWhatToEdit 17,627
#define AskRemoveShelf 23,1009
typedef enum last_action 25,1088
typedef enum last_action {NOTHING,NOTHING25,1088
typedef enum last_action {NOTHING, ADD,25,1088
typedef enum last_action {NOTHING, ADD, REMOVE,25,1088
typedef enum last_action {NOTHING, ADD, REMOVE, EDIT}EDIT25,1088
typedef enum last_action {NOTHING, ADD, REMOVE, EDIT} last_action_t;25,1088
typedef struct undo_action27,1158
  elem_t new;29,1187
  elem_t old;30,1201
  last_action_t last_action;31,1215
} undo_action_t;32,1244
void undo_free(39,1442
undo_action_t *undo_new(undo_new48,1592
void key_free(60,1817
void print_main_menu(68,1916
bool print_shelf(81,2342
void print_shelves(89,2530
void print_item(97,2685
int select_existing_shelf(119,3336
void edit_shelves(143,3845
void edit_description(165,4381
void edit_price(175,4722
void edit_item_aux(188,5150
char *find_free_shelf(find_free_shelf212,5567
void remove_shelves(218,5659
void db_remove_item(240,6366
void add_existing_item(275,7314
void db_add_item(295,7875
void undo_last_action(344,9087
void list_20_items(385,10103
bool list_db(398,10424
char *index_menu_choices(index_menu_choices435,11243
elem_t select_by_index(454,11796
void list_and_select_item(479,12385
void edit_item(489,12574
void edit_db(506,12979
void db_check_sorting(518,13188
void event_loop(523,13268
int main(549,13926

list.c,839
typedef struct link link_t;3,19
struct link5,48
  elem_t elem;7,62
  link_t *next;next8,77
struct list11,97
  link_t *first;first13,111
  link_t *last;last14,128
  element_copy_fun copy_f;15,144
  element_free_fun free_f;16,171
  element_comp_fun cmp_f;17,198
  size_t size;18,224
elem_t list_no_copy(22,244
list_t *list_new(list_new36,702
link_t *link_new(link_new47,981
int adjust_index_insert(55,1161
int adjust_index_get(76,1598
link_t **list_find(list_find97,2025
void make_singleton(109,2264
void list_insert(128,2973
bool empty_list(154,3562
void list_append(166,3941
void list_prepend(192,4755
bool list_get(203,5128
bool list_first(225,5687
bool list_last(232,5854
int list_length(247,6288
void list_remove(263,6782
void list_delete(285,7272
bool list_apply(302,7758
int list_contains(326,8367

shelfinfo.c,443
struct shelf_info 3,24
  bool exists;4,44
  enum owner owner;5,59
  char *name;name6,79
  char *id;id7,93
shelf_info_t *shelf_info_new(shelf_info_new10,109
shelf_info_t *info_initiate(info_initiate15,214
bool info_exists(24,427
enum owner info_owner(28,492
char *info_name(info_name32,561
char *info_id(info_id36,623
void set_info_exists(40,681
void set_info_owner(44,759
void set_info_name(48,845
void set_info_id(52,922

test.c,594
int tree_compare_int(8,102
elem_t string_copy(16,231
int comp_fun_string(23,314
void list_insert_test(30,438
void list_new_test(55,1117
void list_append_test(61,1219
void list_prepend_test(80,1728
void list_get_test(104,2248
void list_first_test(125,2732
void list_last_test(144,3186
void list_remove_test(160,3635
bool list_apply_fun(183,4334
void list_apply_test(191,4441
void list_contains_test(203,4743
void tree_new_test(221,5265
void tree_insert_test(227,5374
void tree_height_test(245,5751
void tree_get_test(274,6455
void tree_remove_test(303,7236
int main(341,8196

tree.c,1475
#define Compare(4,39
#define Compare_keys 5,82
#define Comp 6,131
#define Copy 7,156
#define Free_elem 8,182
#define Free_key 9,215
#define Apply_key 10,247
#define Apply_left 11,298
#define Apply_right 12,367
#define Is_leaf 13,438
#define Leaf 14,499
#define Full 15,557
#define Right 16,612
#define Left 17,646
struct node19,682
  elem_t elem;21,696
  tree_key_t key;22,711
  node_t *left;left23,729
  node_t *right;right24,745
struct tree27,766
  node_t *root;root29,780
  element_copy_fun copy_f;30,796
  element_free_fun e_free_f;31,823
  key_free_fun k_free_f;32,852
  element_comp_fun cmp_f;33,877
  size_t size;34,903
elem_t tree_no_copy(38,923
void tree_no_free(43,978
int tree_no_compare(48,1024
node_t *node_new(node_new58,1188
tree_t *tree_new(tree_new71,1605
void tree_delete(95,2342
int tree_size(116,2821
int max(122,2918
int tree_depth_aux(127,2969
int tree_depth(140,3237
node_t **tree_traverse(tree_traverse153,3589
int get_balance(173,3918
node_t *left_rotate(left_rotate178,4021
void tree_balance(188,4198
bool tree_insert(208,4890
bool tree_has_key(248,5793
bool tree_get(260,6181
void free_node(276,6428
node_t **find_smallest_successor(find_smallest_successor284,6604
bool tree_remove(299,7011
void tree_keys_aux(337,8329
tree_key_t *tree_keys(tree_keys354,8735
void tree_elements_aux(363,8937
elem_t *tree_elements(tree_elements380,9419
bool node_apply(389,9621
bool tree_apply(441,10936

utils.c,790
  int   i;4,36
  float f;5,47
  char *s;s6,58
  char c;7,69
} answer_t;8,79
typedef bool(*check_func)check_func11,93
typedef answer_t(*convert_func)convert_func12,128
bool is_menu_choice(29,653
char ask_question_menu(39,857
answer_t make_float(51,1146
double ask_question_float(55,1222
char *ask_question_shelf(ask_question_shelf60,1381
bool is_valid_shelf(67,1587
bool is_float(83,1967
void clear_input_buffer(103,2398
bool not_empty(117,2770
answer_t ask_question(123,2829
int ask_question_int(142,3263
char *ask_question_string(ask_question_string148,3483
char ask_question_char(154,3661
char chardup(159,3803
bool is_single_char(163,3847
void print_menu(167,3908
int read_string(171,3963
bool is_number(198,4657
void print(221,5204
void println(229,5322

common.c,0
